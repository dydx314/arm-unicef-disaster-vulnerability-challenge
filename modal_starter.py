import modal
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory
import matplotlib.pyplot as plt
from PIL import Image
import re
import matplotlib.patches as patches
from ultralytics import YOLO
import os
import yaml

#note - we should use YOLO-NAS-SAT
model = YOLO('yolov8n.pt')

EPOCHS = 60
BATCH_SIZE = 32
OPTIMIZER = "auto"
SEED = 42
NAME = f"Arm_Yolo_{EPOCHS}"
DEVICE = [0]
VERBOSE = False
RESUME = False
PATIENCE = 20

test = pd.read_csv("./data/Test.csv")


app = modal.App(
    "example-get-started"
)  # Note: prior to April 2024, "app" was called "stub"


# here, we


@app.function()
def train(train):
    ### train
    model.train(
        data = "./data/data.yaml",
        task = 'detect',
        imgsz = (img_height, img_width),
        epochs = EPOCHS,
        batch = BATCH_SIZE,
        optimizer = OPTIMIZER,
        patience = PATIENCE,
        name = NAME,
        seed = SEED,
        val = True,
        resume = RESUME,
        device = DEVICE,
        verbose = VERBOSE
    )
    model.export(
        format = 'onnx', # openvino, onnx, engine, tflite
        imgsz = (img_height, img_width),
        half = False,
        int8 = False,
        simplify = False,
        nms = False,
    )


@app.local_entrypoint()
def main():
    train_data = pd.read_csv("./data/Train.csv")
    model = train.remote(train_data)
