import cv2
import numpy as np
import glob


def classify_roof(image_path):
    # Load the image
    image = cv2.imread(image_path)

    # Convert the image to HSV color space
    hsv_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

    # Define HSV range for tin (gray/metallic colors)
    tin_lower = np.array([0, 0, 100])
    tin_upper = np.array([180, 50, 255])

    # Define HSV range for grass (green colors)
    grass_lower = np.array([35, 40, 40])
    grass_upper = np.array([85, 255, 255])

    # Create masks
    tin_mask = cv2.inRange(hsv_image, tin_lower, tin_upper)
    grass_mask = cv2.inRange(hsv_image, grass_lower, grass_upper)

    # Calculate the percentage of the image covered by tin and grass
    tin_percentage = (cv2.countNonZero(tin_mask) / (image.size / 3)) * 100
    grass_percentage = (cv2.countNonZero(grass_mask) / (image.size / 3)) * 100

    # Classify the image based on the percentages
    if tin_percentage > grass_percentage:
        classification = 'Tin Roof'
    else:
        classification = 'Grass Roof'

    return classification


matching_files = glob.glob('test/patch_*.jpg')
for file_path in matching_files:
    result = classify_roof(file_path)
    print(f'{file_path} is classified as: {result}')
